name: pagify-dev-s3-deploy

on:
  push:
    tags:
      - pagify-dev-*

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   
      contents: read 
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      
      - name: Get the build version
        id: get_build_version
        run: |
          FULL_TAG=$(echo $GITHUB_REF | cut -d / -f 3)
          VERSION=${FULL_TAG#pagify-dev-}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT


      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: npm install
        run: npm install


      - name: Build JS
        env:
          NODE_ENV: production
        run: npm run build

      - name: Upload to S3
        run: |
          aws s3 sync $PWD/src/dist/ s3://$BUCKET_LOCATION/main/pagify/main/
          aws s3 sync $PWD/src/dist/ s3://$BUCKET_LOCATION/main/pagify/${{ steps.get_build_version.outputs.VERSION }}/
        env:
          BUCKET_LOCATION: elixir-dr-dev
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-south-1
          
      - name: Clean up
        if: always()
        run: |
          echo "Deployment completed"

  Invalidate-Cache:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Invalidating Cache
        run: |
          echo 'CD Completed, Invalidating Cache'
          aws cloudfront create-invalidation --distribution-id ERYGWO56QYEYB --paths "/*"
          aws cloudfront create-invalidation --distribution-id E2MUDDS4SQLH7S --paths "/*"
        env:
          BUCKET_LOCATION: elixir-dr-dev
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-south-1